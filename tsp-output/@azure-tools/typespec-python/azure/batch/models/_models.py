# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, List, Mapping, Optional, TYPE_CHECKING, overload

from .. import _model_base
from .._model_base import rest_field

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class BatchApplication(_model_base.Model):
    """Contains information about an application in an Azure Batch Account.

    All required parameters must be populated in order to send to Azure.

    :ivar id: A string that uniquely identifies the application within the Account. Required.
    :vartype id: str
    :ivar display_name: The display name for the application. Required.
    :vartype display_name: str
    :ivar versions: The list of available versions of the application. Required.
    :vartype versions: list[str]
    """

    id: str = rest_field()
    """A string that uniquely identifies the application within the Account. Required."""
    display_name: str = rest_field(name="displayName")
    """The display name for the application. Required."""
    versions: List[str] = rest_field()
    """The list of available versions of the application. Required."""

    @overload
    def __init__(
        self,
        *,
        id: str,  # pylint: disable=redefined-builtin
        display_name: str,
        versions: List[str],
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class BatchError(_model_base.Model):
    """An error response received from the Azure Batch service.

    All required parameters must be populated in order to send to Azure.

    :ivar code: An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically. Required.
    :vartype code: str
    :ivar message: A message describing the error, intended to be suitable for display in a user
     interface.
    :vartype message: ~azure.batch.models.ErrorMessage
    :ivar values: A collection of key-value pairs containing additional details about the error.
    :vartype values: list[~azure.batch.models.BatchErrorDetail]
    """

    code: str = rest_field()
    """An identifier for the error. Codes are invariant and are intended to be consumed
     programmatically. Required."""
    message: Optional["_models.ErrorMessage"] = rest_field()
    """A message describing the error, intended to be suitable for display in a user interface."""
    values: Optional[List["_models.BatchErrorDetail"]] = rest_field()
    """A collection of key-value pairs containing additional details about the error."""

    @overload
    def __init__(
        self,
        *,
        code: str,
        message: Optional["_models.ErrorMessage"] = None,
        values: Optional[List["_models.BatchErrorDetail"]] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class BatchErrorDetail(_model_base.Model):
    """An item of additional information included in an Azure Batch error response.

    :ivar key: An identifier specifying the meaning of the Value property.
    :vartype key: str
    :ivar value: The additional information included with the error response.
    :vartype value: str
    """

    key: Optional[str] = rest_field()
    """An identifier specifying the meaning of the Value property."""
    value: Optional[str] = rest_field()
    """The additional information included with the error response."""

    @overload
    def __init__(
        self,
        *,
        key: Optional[str] = None,
        value: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class BatchPool(_model_base.Model):
    """A Pool in the Azure Batch service.

    Readonly variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: A string that uniquely identifies the Pool within the Account. The ID can contain any
     combination of alphanumeric characters including hyphens and underscores, and cannot contain
     more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not
     have two IDs within an Account that differ only by case).
    :vartype id: str
    :ivar display_name: The display name for the Pool. The display name need not be unique and can
     contain any Unicode characters up to a maximum length of 1024.
    :vartype display_name: str
    :ivar url: The URL of the Pool.
    :vartype url: str
    """

    id: Optional[str] = rest_field(visibility=["read"])
    """A string that uniquely identifies the Pool within the Account. The ID can contain any
     combination of alphanumeric characters including hyphens and underscores, and cannot contain
     more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not
     have two IDs within an Account that differ only by case)."""
    display_name: Optional[str] = rest_field(name="displayName", visibility=["read"])
    """The display name for the Pool. The display name need not be unique and can contain any Unicode
     characters up to a maximum length of 1024."""
    url: Optional[str] = rest_field(visibility=["read"])
    """The URL of the Pool."""


class ErrorMessage(_model_base.Model):
    """An error message received in an Azure Batch error response.

    :ivar lang: The language code of the error message.
    :vartype lang: str
    :ivar value: The text of the message.
    :vartype value: str
    """

    lang: Optional[str] = rest_field()
    """The language code of the error message."""
    value: Optional[str] = rest_field()
    """The text of the message."""

    @overload
    def __init__(
        self,
        *,
        lang: Optional[str] = None,
        value: Optional[str] = None,
    ):
        ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
